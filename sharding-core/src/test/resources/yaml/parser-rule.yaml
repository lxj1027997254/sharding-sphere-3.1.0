dataSources:
  db0: !!com.zaxxer.hikari.HikariDataSource
    driverClassName: org.h2.Driver
    jdbcUrl: jdbc:h2:mem:db0;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
    username: sa
    password: 
  db1: !!com.zaxxer.hikari.HikariDataSource
    driverClassName: org.h2.Driver
    jdbcUrl: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
    username: sa
    password:

shardingRule:
  tables:
    t_order:
      actualDataNodes: db${0..1}.t_order
      tableStrategy: 
        complex:
          shardingColumns: user_id, order_id
          algorithmClassName: io.shardingsphere.api.algorithm.fixture.TestComplexKeysShardingAlgorithm
      logicIndex: order_index
    t_order_item:
      actualDataNodes: db${0..1}.t_order_item
      tableStrategy: 
        complex:
          shardingColumns: user_id, order_id, item_id
          algorithmClassName: io.shardingsphere.api.algorithm.fixture.TestComplexKeysShardingAlgorithm 
      keyGeneratorColumnName: item_id
    t_place:
      actualDataNodes: db${0..1}.t_place
      tableStrategy: 
        complex:
          shardingColumns: user_new_id, guid
          algorithmClassName: io.shardingsphere.api.algorithm.fixture.TestComplexKeysShardingAlgorithm
  bindingTables:
    - t_order, t_order_item
  defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.fixture.IncrementKeyGenerator
